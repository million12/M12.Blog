# Add a new matcher to the rendering of the main content (PrimaryContent) to check if the current node
# is a blog post document. In this case we don't render a ContentCollection like the default matcher
# but render the blog post TypoScript object.
prototype(TYPO3.Neos:PrimaryContent).blogPost {
	condition = ${q(documentNode).is('[instanceof M12.Plugin.Blog:Post]')}
	type = 'M12.Plugin.Blog:Post'
}

prototype(M12.Plugin.Blog:Post) < prototype(TYPO3.TypoScript:Template) {
	templatePath = 'resource://M12.Plugin.Blog/Private/Templates/Post/Post.html'
	node = ${node}

	nodeIdentifier = ${q(node).property('_nodeData.identifier')}
	settings = ${Configuration.setting('M12.Plugin.Blog')}

	synopsis = TYPO3.Neos:ContentCollection {
		nodePath = 'synopsis'
	}
	main = TYPO3.Neos:ContentCollection {
		nodePath = 'main'
	}
}

prototype(M12.Plugin.Blog:PostPlugin) < prototype(TYPO3.Neos:Plugin) {
	node = ${node}

	package = 'M12.Plugin.Blog'
	controller = 'Post'
	action = ${node.properties.mode ? node.properties.mode : 'index'}
}
